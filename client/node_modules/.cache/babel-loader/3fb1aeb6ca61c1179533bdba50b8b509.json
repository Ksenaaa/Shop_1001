{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useState } from 'react';\nconst storageName = 'userData';\nconst initialData = {\n  token: '',\n  userId: '',\n  userName: '',\n  userEmail: '',\n  userIcon: '',\n  userRole: ''\n};\nexport const useAuth = () => {\n  _s();\n\n  const userData = JSON.parse(localStorage.getItem(storageName)) || initialData;\n  const [userAuth, setUserAuth] = useState({ ...userData\n  });\n  const login = useCallback(_ref => {\n    let {\n      jwtToken,\n      id,\n      name,\n      email,\n      icon,\n      role\n    } = _ref;\n    const userInfo = {\n      token: jwtToken,\n      userId: id,\n      userName: name,\n      userEmail: email,\n      userIcon: icon,\n      userRole: role\n    };\n    setUserAuth({ ...userInfo\n    });\n    localStorage.setItem(storageName, JSON.stringify({ ...userInfo\n    }));\n  }, []);\n  const logout = useCallback(() => {\n    setUserAuth({ ...initialData\n    });\n    localStorage.removeItem(storageName);\n  }, []);\n  return {\n    login,\n    logout,\n    userAuth\n  };\n};\n\n_s(useAuth, \"j0C6w6VvKG8hj/WiZdQ2Q7zRFro=\");","map":{"version":3,"names":["useCallback","useState","storageName","initialData","token","userId","userName","userEmail","userIcon","userRole","useAuth","userData","JSON","parse","localStorage","getItem","userAuth","setUserAuth","login","jwtToken","id","name","email","icon","role","userInfo","setItem","stringify","logout","removeItem"],"sources":["/Users/ksena/Программирование/React/lessons/Shop_1001/client/src/hooks/auth.hook.ts"],"sourcesContent":["import React, { useCallback, useState } from 'react'\n\nimport { IUser } from '../interface/IUser'\nimport { IUserAuth } from '../interface/IUserAuth'\n\nconst storageName = 'userData'\n\nconst initialData = {\n   token: '',\n   userId: '',\n   userName: '',\n   userEmail: '',\n   userIcon: '',\n   userRole: ''\n}\n\nexport const useAuth = () => {\n   const userData = JSON.parse(localStorage.getItem(storageName) as string) || initialData\n\n   const [userAuth, setUserAuth] = useState<IUser>({ ...userData })\n\n   const login = useCallback(({ jwtToken, id, name, email, icon, role }: IUserAuth) => {\n      const userInfo = {\n         token: jwtToken,\n         userId: id,\n         userName: name,\n         userEmail: email,\n         userIcon: icon,\n         userRole: role\n      }\n\n      setUserAuth({ ...userInfo })\n      localStorage.setItem(storageName, JSON.stringify({ ...userInfo }))\n   }, [])\n\n   const logout = useCallback(() => {\n      setUserAuth({ ...initialData })\n      localStorage.removeItem(storageName)\n   }, [])\n\n   return { login, logout, userAuth }\n}\n"],"mappings":";;AAAA,SAAgBA,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AAKA,MAAMC,WAAW,GAAG,UAApB;AAEA,MAAMC,WAAW,GAAG;EACjBC,KAAK,EAAE,EADU;EAEjBC,MAAM,EAAE,EAFS;EAGjBC,QAAQ,EAAE,EAHO;EAIjBC,SAAS,EAAE,EAJM;EAKjBC,QAAQ,EAAE,EALO;EAMjBC,QAAQ,EAAE;AANO,CAApB;AASA,OAAO,MAAMC,OAAO,GAAG,MAAM;EAAA;;EAC1B,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBb,WAArB,CAAX,KAA2DC,WAA5E;EAEA,MAAM,CAACa,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAQ,EAAE,GAAGU;EAAL,CAAR,CAAxC;EAEA,MAAMO,KAAK,GAAGlB,WAAW,CAAC,QAA0D;IAAA,IAAzD;MAAEmB,QAAF;MAAYC,EAAZ;MAAgBC,IAAhB;MAAsBC,KAAtB;MAA6BC,IAA7B;MAAmCC;IAAnC,CAAyD;IACjF,MAAMC,QAAQ,GAAG;MACdrB,KAAK,EAAEe,QADO;MAEdd,MAAM,EAAEe,EAFM;MAGdd,QAAQ,EAAEe,IAHI;MAIdd,SAAS,EAAEe,KAJG;MAKdd,QAAQ,EAAEe,IALI;MAMdd,QAAQ,EAAEe;IANI,CAAjB;IASAP,WAAW,CAAC,EAAE,GAAGQ;IAAL,CAAD,CAAX;IACAX,YAAY,CAACY,OAAb,CAAqBxB,WAArB,EAAkCU,IAAI,CAACe,SAAL,CAAe,EAAE,GAAGF;IAAL,CAAf,CAAlC;EACF,CAZwB,EAYtB,EAZsB,CAAzB;EAcA,MAAMG,MAAM,GAAG5B,WAAW,CAAC,MAAM;IAC9BiB,WAAW,CAAC,EAAE,GAAGd;IAAL,CAAD,CAAX;IACAW,YAAY,CAACe,UAAb,CAAwB3B,WAAxB;EACF,CAHyB,EAGvB,EAHuB,CAA1B;EAKA,OAAO;IAAEgB,KAAF;IAASU,MAAT;IAAiBZ;EAAjB,CAAP;AACF,CAzBM;;GAAMN,O"},"metadata":{},"sourceType":"module"}