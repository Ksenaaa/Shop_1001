{"ast":null,"code":"export const optionsSort = ['year', 'price', 'name'];\nexport let FilterOption;\n\n(function (FilterOption) {\n  FilterOption[\"Checkbox\"] = \"checkbox\";\n  FilterOption[\"Range\"] = \"number\";\n})(FilterOption || (FilterOption = {}));\n\nexport const optionsFilter = [{\n  id: '1',\n  type: FilterOption.Checkbox,\n  label: 'category',\n  payload: ['astronomy', 'geography', 'history', 'humour', 'medicine', 'romance', 'science']\n}, {\n  id: '2',\n  type: FilterOption.Range,\n  label: 'page',\n  payload: {}\n}, {\n  id: '3',\n  type: FilterOption.Range,\n  label: 'year',\n  payload: {}\n}, {\n  id: '4',\n  type: FilterOption.Checkbox,\n  label: 'language',\n  payload: ['ukrainian', 'english', 'poland']\n}, {\n  id: '5',\n  type: FilterOption.Range,\n  label: 'price',\n  payload: {}\n}];\nexport let RangeType;\n\n(function (RangeType) {\n  RangeType[\"From\"] = \"from\";\n  RangeType[\"To\"] = \"to\";\n})(RangeType || (RangeType = {}));\n\nexport let SORT;\n\n(function (SORT) {\n  SORT[\"asc\"] = \"asc\";\n  SORT[\"desc\"] = \"desc\";\n})(SORT || (SORT = {}));","map":{"version":3,"names":["optionsSort","FilterOption","optionsFilter","id","type","Checkbox","label","payload","Range","RangeType","SORT"],"sources":["/Users/ksena/Программирование/React/lessons/Shop_1001/client/src/component/filter-sort/constants.ts"],"sourcesContent":["export const optionsSort = ['year', 'price', 'name']\n\nexport enum FilterOption {\n    Checkbox = 'checkbox',\n    Range = 'number',\n}\n\nexport interface Filter {\n    id: string,\n    type: FilterOption,\n    label: string,\n    payload: string[] | RangeType,\n}\n\nexport const optionsFilter: Filter[] = [\n    {\n        id: '1',\n        type: FilterOption.Checkbox,\n        label: 'category',\n        payload: ['astronomy', 'geography', 'history', 'humour', 'medicine', 'romance', 'science']\n    }, \n    {\n        id: '2',\n        type: FilterOption.Range,\n        label: 'page',\n        payload: {} as RangeType,\n    }, \n    {\n        id: '3',\n        type: FilterOption.Range,\n        label: 'year',\n        payload: {} as RangeType,\n    }, \n    {\n        id: '4',\n        type: FilterOption.Checkbox,\n        label: 'language',\n        payload: ['ukrainian', 'english', 'poland']\n    }, \n    {\n        id: '5',\n        type: FilterOption.Range,\n        label: 'price',\n        payload: {} as RangeType,\n    }, \n]\n\nexport enum RangeType {\n    From = 'from',\n    To = 'to'\n}\n\nexport enum SORT {\n    asc = 'asc',\n    desc = 'desc'\n}\n"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,CAApB;AAEP,WAAYC,YAAZ;;WAAYA,Y;EAAAA,Y;EAAAA,Y;GAAAA,Y,KAAAA,Y;;AAYZ,OAAO,MAAMC,aAAuB,GAAG,CACnC;EACIC,EAAE,EAAE,GADR;EAEIC,IAAI,EAAEH,YAAY,CAACI,QAFvB;EAGIC,KAAK,EAAE,UAHX;EAIIC,OAAO,EAAE,CAAC,WAAD,EAAc,WAAd,EAA2B,SAA3B,EAAsC,QAAtC,EAAgD,UAAhD,EAA4D,SAA5D,EAAuE,SAAvE;AAJb,CADmC,EAOnC;EACIJ,EAAE,EAAE,GADR;EAEIC,IAAI,EAAEH,YAAY,CAACO,KAFvB;EAGIF,KAAK,EAAE,MAHX;EAIIC,OAAO,EAAE;AAJb,CAPmC,EAanC;EACIJ,EAAE,EAAE,GADR;EAEIC,IAAI,EAAEH,YAAY,CAACO,KAFvB;EAGIF,KAAK,EAAE,MAHX;EAIIC,OAAO,EAAE;AAJb,CAbmC,EAmBnC;EACIJ,EAAE,EAAE,GADR;EAEIC,IAAI,EAAEH,YAAY,CAACI,QAFvB;EAGIC,KAAK,EAAE,UAHX;EAIIC,OAAO,EAAE,CAAC,WAAD,EAAc,SAAd,EAAyB,QAAzB;AAJb,CAnBmC,EAyBnC;EACIJ,EAAE,EAAE,GADR;EAEIC,IAAI,EAAEH,YAAY,CAACO,KAFvB;EAGIF,KAAK,EAAE,OAHX;EAIIC,OAAO,EAAE;AAJb,CAzBmC,CAAhC;AAiCP,WAAYE,SAAZ;;WAAYA,S;EAAAA,S;EAAAA,S;GAAAA,S,KAAAA,S;;AAKZ,WAAYC,IAAZ;;WAAYA,I;EAAAA,I;EAAAA,I;GAAAA,I,KAAAA,I"},"metadata":{},"sourceType":"module"}