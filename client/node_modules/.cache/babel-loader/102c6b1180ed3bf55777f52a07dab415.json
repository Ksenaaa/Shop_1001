{"ast":null,"code":"export const countBook = (localStore, id) => {\n  let findBook = localStore.find(bookFromLocal => id === bookFromLocal.idBook);\n  if (!findBook) return 0;\n  return +findBook.quantity;\n};\nexport const sumBook = (localStore, id, price) => {\n  let findBook = localStore.find(bookFromLocal => id === bookFromLocal.idBook);\n  if (!findBook) return 0;\n  return +(+findBook.quantity * +price).toFixed(2);\n};","map":{"version":3,"names":["countBook","localStore","id","findBook","find","bookFromLocal","idBook","quantity","sumBook","price","toFixed"],"sources":["/Users/ksena/Программирование/React/lessons/Shop_1001/client/src/pages/basket/utils.ts"],"sourcesContent":["import React from \"react\"\n\nimport { LocalStorageBookType } from \"../../hooks/basket.hook\"\n\nexport const countBook = (localStore: LocalStorageBookType[], id: string) => {\n    let findBook = localStore.find(bookFromLocal => id === bookFromLocal.idBook)\n    if (!findBook) return 0\n\n    return +findBook.quantity\n}\n\nexport const sumBook = (localStore: LocalStorageBookType[], id: string, price: string) => {\n    let findBook = localStore.find(bookFromLocal => id === bookFromLocal.idBook)\n    if (!findBook) return 0\n    \n    return +(+findBook.quantity * +price).toFixed(2)\n}\n"],"mappings":"AAIA,OAAO,MAAMA,SAAS,GAAG,CAACC,UAAD,EAAqCC,EAArC,KAAoD;EACzE,IAAIC,QAAQ,GAAGF,UAAU,CAACG,IAAX,CAAgBC,aAAa,IAAIH,EAAE,KAAKG,aAAa,CAACC,MAAtD,CAAf;EACA,IAAI,CAACH,QAAL,EAAe,OAAO,CAAP;EAEf,OAAO,CAACA,QAAQ,CAACI,QAAjB;AACH,CALM;AAOP,OAAO,MAAMC,OAAO,GAAG,CAACP,UAAD,EAAqCC,EAArC,EAAiDO,KAAjD,KAAmE;EACtF,IAAIN,QAAQ,GAAGF,UAAU,CAACG,IAAX,CAAgBC,aAAa,IAAIH,EAAE,KAAKG,aAAa,CAACC,MAAtD,CAAf;EACA,IAAI,CAACH,QAAL,EAAe,OAAO,CAAP;EAEf,OAAO,CAAC,CAAC,CAACA,QAAQ,CAACI,QAAV,GAAqB,CAACE,KAAvB,EAA8BC,OAA9B,CAAsC,CAAtC,CAAR;AACH,CALM"},"metadata":{},"sourceType":"module"}