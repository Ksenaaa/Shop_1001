{"ast":null,"code":"var _jsxFileName = \"/Users/ksena/\\u041F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435/React/lessons/Shop_1001/client/src/component/input/Input.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { handleErrors } from '../../utils/ErrorsHanding';\nimport { useStyles } from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TextFields = _ref => {\n  _s();\n\n  let {\n    label,\n    type,\n    errors,\n    onChange,\n    name,\n    value\n  } = _ref;\n  const classes = useStyles();\n  const error = useMemo(() => handleErrors({\n    name,\n    errors\n  }), [name, errors]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(TextField, {\n      error: !!error,\n      variant: \"outlined\",\n      label: label,\n      type: type,\n      onChange: onChange,\n      name: name,\n      value: value,\n      helperText: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TextFields, \"K547z2++eRs7q6cMGt+Pk74VlF4=\", false, function () {\n  return [useStyles];\n});\n\n_c = TextFields;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextFields\");","map":{"version":3,"names":["React","useMemo","TextField","handleErrors","useStyles","TextFields","label","type","errors","onChange","name","value","classes","error","root"],"sources":["/Users/ksena/Программирование/React/lessons/Shop_1001/client/src/component/input/Input.tsx"],"sourcesContent":["import React, { ChangeEvent, FC, useMemo } from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nimport { handleErrors, ErrorType } from '../../utils/ErrorsHanding';\nimport { useStyles } from './style';\n\ntype InputType = {\n  label: string,\n  type: string,\n  errors: ErrorType[] | null,\n  onChange(e: ChangeEvent<HTMLInputElement>): void,\n  name: string,\n  value?: string,\n}\n\nexport const TextFields: FC<InputType> = ({ label, type, errors, onChange, name, value }) => {\n  const classes = useStyles();\n\n  const error = useMemo(() => handleErrors({ name, errors }), [name, errors]) \n  \n  return (\n    <div className={classes.root} >\n        <TextField\n          error={!!error}\n          variant=\"outlined\" \n          label={label} \n          type={type}\n          onChange={onChange}\n          name={name}\n          value={value}\n          helperText={error}\n        />    \n    </div>\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAiCC,OAAjC,QAAgD,OAAhD;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,SAASC,YAAT,QAAwC,2BAAxC;AACA,SAASC,SAAT,QAA0B,SAA1B;;AAWA,OAAO,MAAMC,UAAyB,GAAG,QAAoD;EAAA;;EAAA,IAAnD;IAAEC,KAAF;IAASC,IAAT;IAAeC,MAAf;IAAuBC,QAAvB;IAAiCC,IAAjC;IAAuCC;EAAvC,CAAmD;EAC3F,MAAMC,OAAO,GAAGR,SAAS,EAAzB;EAEA,MAAMS,KAAK,GAAGZ,OAAO,CAAC,MAAME,YAAY,CAAC;IAAEO,IAAF;IAAQF;EAAR,CAAD,CAAnB,EAAuC,CAACE,IAAD,EAAOF,MAAP,CAAvC,CAArB;EAEA,oBACE;IAAK,SAAS,EAAEI,OAAO,CAACE,IAAxB;IAAA,uBACI,QAAC,SAAD;MACE,KAAK,EAAE,CAAC,CAACD,KADX;MAEE,OAAO,EAAC,UAFV;MAGE,KAAK,EAAEP,KAHT;MAIE,IAAI,EAAEC,IAJR;MAKE,QAAQ,EAAEE,QALZ;MAME,IAAI,EAAEC,IANR;MAOE,KAAK,EAAEC,KAPT;MAQE,UAAU,EAAEE;IARd;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADF;AAcD,CAnBM;;GAAMR,U;UACKD,S;;;KADLC,U"},"metadata":{},"sourceType":"module"}