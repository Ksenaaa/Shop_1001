{"ast":null,"code":"var _jsxFileName = \"/Users/ksena/\\u041F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435/React/lessons/Shop_1001/client/src/context/FilterSortProvider.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { FilterSortContext } from './FilterSortContext';\nimport { SORT } from '../component/filter-sort/constants';\nimport { formatQueryStringFilter } from '../utils/formatQueryString';\nimport { onParseFilter } from '../utils/parceFilterParams';\nimport { addFilterByOptions } from '../utils/addFilterByOptions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let FilterParams;\n\n(function (FilterParams) {\n  FilterParams[\"SORT_FIELD\"] = \"sortfield\";\n  FilterParams[\"SORT_ORDER\"] = \"sortorder\";\n  FilterParams[\"SEARCH\"] = \"search\";\n  FilterParams[\"FILTER\"] = \"filter\";\n})(FilterParams || (FilterParams = {}));\n\nexport const FilterSortProvider = _ref => {\n  _s();\n\n  let {\n    setBooks,\n    setCurrentPage,\n    children\n  } = _ref;\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [sortField, setSortField] = useState(searchParams.get(FilterParams.SORT_FIELD) || '');\n  const [sortOrder, setSortOrder] = useState(searchParams.get(FilterParams.SORT_ORDER) || SORT.asc);\n  const [filterCategory, setFilterCategory] = useState({});\n  const [applyFilter, setApplyFilter] = useState(onParseFilter(searchParams.get(FilterParams.FILTER)) || {});\n  const [searchText, setSearchText] = useState(searchParams.get(FilterParams.SEARCH) || '');\n  const onSort = useCallback(e => {\n    e.stopPropagation();\n    setBooks([]);\n    setCurrentPage(1);\n    setSortOrder(prevSort => prevSort === SORT.asc ? SORT.desc : SORT.asc);\n  }, []);\n  const pickFieldForSort = useCallback(name => {\n    setBooks([]);\n    setCurrentPage(1);\n    setSortField(name);\n  }, []);\n  const addFilterCategory = useCallback((name, item, type) => setFilterCategory(prevFilter => addFilterByOptions({\n    prevFilter,\n    name,\n    item,\n    type\n  })), []);\n  const onFilter = useCallback(() => {\n    if (filterCategory !== applyFilter) {\n      setBooks([]);\n      setCurrentPage(1);\n      setApplyFilter(filterCategory);\n    }\n  }, [filterCategory, applyFilter]);\n  const onSearch = useCallback(text => {\n    setBooks([]);\n    setCurrentPage(1);\n    setSearchText(text);\n  }, []);\n  useEffect(() => {\n    let params = {};\n    if (sortField.length) params[FilterParams.SORT_FIELD] = sortField;\n    if (sortField.length) params[FilterParams.SORT_ORDER] = sortOrder;\n    if (searchText.length) params[FilterParams.SEARCH] = searchText;\n    if (Object.keys(applyFilter).length != 0) params[FilterParams.FILTER] = formatQueryStringFilter(applyFilter);\n    setSearchParams(params);\n  }, [searchText, applyFilter, sortField, sortOrder]);\n  const clearFilters = useCallback(() => setFilterCategory(applyFilter), [applyFilter]);\n  const onRemoveFilters = useCallback(() => {\n    setBooks([]);\n    setCurrentPage(1);\n    setSortField('');\n    setSortOrder(SORT.asc);\n    setApplyFilter({});\n    setFilterCategory({});\n    setSearchText('');\n  }, []);\n  const value = {\n    onSort,\n    pickFieldForSort,\n    onFilter,\n    onRemoveFilters,\n    clearFilters,\n    sortField,\n    sortOrder,\n    filterCategory,\n    applyFilter,\n    addFilterCategory,\n    searchText,\n    onSearch\n  };\n  return /*#__PURE__*/_jsxDEV(FilterSortContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 7\n  }, this);\n};\n\n_s(FilterSortProvider, \"m4PW5w0AUuGSZIVIV7tJoCLDWCw=\", false, function () {\n  return [useSearchParams];\n});\n\n_c = FilterSortProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterSortProvider\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","useSearchParams","FilterSortContext","SORT","formatQueryStringFilter","onParseFilter","addFilterByOptions","FilterParams","FilterSortProvider","setBooks","setCurrentPage","children","searchParams","setSearchParams","sortField","setSortField","get","SORT_FIELD","sortOrder","setSortOrder","SORT_ORDER","asc","filterCategory","setFilterCategory","applyFilter","setApplyFilter","FILTER","searchText","setSearchText","SEARCH","onSort","e","stopPropagation","prevSort","desc","pickFieldForSort","name","addFilterCategory","item","type","prevFilter","onFilter","onSearch","text","params","length","Object","keys","clearFilters","onRemoveFilters","value"],"sources":["/Users/ksena/Программирование/React/lessons/Shop_1001/client/src/context/FilterSortProvider.tsx"],"sourcesContent":["import React, { ReactElement, UIEvent, useCallback, useEffect, useState } from 'react'\nimport { useSearchParams } from 'react-router-dom'\n\nimport { FilterSortContext } from './FilterSortContext'\nimport { SORT } from '../component/filter-sort/constants'\nimport { IFilter, RangeFilter } from '../interface/IFilter'\nimport { formatQueryStringFilter } from '../utils/formatQueryString'\nimport { onParseFilter } from '../utils/parceFilterParams'\nimport { addFilterByOptions } from '../utils/addFilterByOptions'\n\ntype Props = {\n   setBooks: ([]) => void,\n   setCurrentPage: (arg: number) => void,\n   children: ReactElement,\n}\n\nexport enum FilterParams {\n   SORT_FIELD = 'sortfield',\n   SORT_ORDER = 'sortorder',\n   SEARCH = 'search',\n   FILTER = 'filter',\n}\n \nexport const FilterSortProvider = ({ setBooks, setCurrentPage, children }: Props) => {\n   const [searchParams, setSearchParams] = useSearchParams()\n\n   const [sortField, setSortField] = useState<string>(searchParams.get(FilterParams.SORT_FIELD) || '')\n   const [sortOrder, setSortOrder] = useState<SORT | string>(searchParams.get(FilterParams.SORT_ORDER) || SORT.asc)\n   const [filterCategory, setFilterCategory] = useState<IFilter>({})\n   const [applyFilter, setApplyFilter] = useState<IFilter>(onParseFilter(searchParams.get(FilterParams.FILTER)) || {})\n   const [searchText, setSearchText] = useState<string>(searchParams.get(FilterParams.SEARCH) || '')\n\n   const onSort = useCallback((e: UIEvent<SVGSVGElement>) => {\n      e.stopPropagation()\n      setBooks([])\n      setCurrentPage(1)\n      setSortOrder(prevSort => (prevSort === SORT.asc ? SORT.desc : SORT.asc))\n   }, [])\n\n   const pickFieldForSort = useCallback((name: string) => {\n      setBooks([])\n      setCurrentPage(1)\n      setSortField(name)\n   }, [])\n\n   const addFilterCategory = useCallback((name: string, item: string | RangeFilter, type: string) => \n      setFilterCategory(prevFilter => addFilterByOptions({ prevFilter, name, item, type }))\n   , [])\n\n   const onFilter = useCallback(() => {\n      if (filterCategory !== applyFilter) {\n         setBooks([])\n         setCurrentPage(1)\n         setApplyFilter(filterCategory)\n      }\n   }, [filterCategory, applyFilter]) \n   \n   const onSearch = useCallback((text: string) => {\n      setBooks([])\n      setCurrentPage(1)\n      setSearchText(text)\n   }, []) \n\n   useEffect(() => {\n      let params: Record<string, string> = {}\n      if (sortField.length) params[FilterParams.SORT_FIELD] = sortField\n      if (sortField.length) params[FilterParams.SORT_ORDER] = sortOrder\n      if (searchText.length) params[FilterParams.SEARCH] = searchText\n      if (Object.keys(applyFilter).length != 0) params[FilterParams.FILTER] = formatQueryStringFilter(applyFilter)\n      setSearchParams(params)\n   }, [searchText, applyFilter, sortField, sortOrder])\n\n   const clearFilters = useCallback(() => \n      setFilterCategory(applyFilter)\n   , [applyFilter]) \n      \n   const onRemoveFilters = useCallback(() => {\n      setBooks([])\n      setCurrentPage(1)\n      setSortField('')\n      setSortOrder(SORT.asc)\n      setApplyFilter({})\n      setFilterCategory({})\n      setSearchText('')\n   }, []) \n\n   const value = { \n      onSort, \n      pickFieldForSort, \n      onFilter, \n      onRemoveFilters, \n      clearFilters,\n      sortField, \n      sortOrder, \n      filterCategory,\n      applyFilter,\n      addFilterCategory,\n      searchText,\n      onSearch,\n   }\n\n   return (\n      <FilterSortContext.Provider value={value}>\n         {children}\n      </FilterSortContext.Provider>\n   )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAuCC,WAAvC,EAAoDC,SAApD,EAA+DC,QAA/D,QAA+E,OAA/E;AACA,SAASC,eAAT,QAAgC,kBAAhC;AAEA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,SAASC,IAAT,QAAqB,oCAArB;AAEA,SAASC,uBAAT,QAAwC,4BAAxC;AACA,SAASC,aAAT,QAA8B,4BAA9B;AACA,SAASC,kBAAT,QAAmC,6BAAnC;;AAQA,WAAYC,YAAZ;;WAAYA,Y;EAAAA,Y;EAAAA,Y;EAAAA,Y;EAAAA,Y;GAAAA,Y,KAAAA,Y;;AAOZ,OAAO,MAAMC,kBAAkB,GAAG,QAAmD;EAAA;;EAAA,IAAlD;IAAEC,QAAF;IAAYC,cAAZ;IAA4BC;EAA5B,CAAkD;EAClF,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCZ,eAAe,EAAvD;EAEA,MAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAASY,YAAY,CAACI,GAAb,CAAiBT,YAAY,CAACU,UAA9B,KAA6C,EAAtD,CAA1C;EACA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAgBY,YAAY,CAACI,GAAb,CAAiBT,YAAY,CAACa,UAA9B,KAA6CjB,IAAI,CAACkB,GAAlE,CAA1C;EACA,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCvB,QAAQ,CAAU,EAAV,CAApD;EACA,MAAM,CAACwB,WAAD,EAAcC,cAAd,IAAgCzB,QAAQ,CAAUK,aAAa,CAACO,YAAY,CAACI,GAAb,CAAiBT,YAAY,CAACmB,MAA9B,CAAD,CAAb,IAAwD,EAAlE,CAA9C;EACA,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8B5B,QAAQ,CAASY,YAAY,CAACI,GAAb,CAAiBT,YAAY,CAACsB,MAA9B,KAAyC,EAAlD,CAA5C;EAEA,MAAMC,MAAM,GAAGhC,WAAW,CAAEiC,CAAD,IAA+B;IACvDA,CAAC,CAACC,eAAF;IACAvB,QAAQ,CAAC,EAAD,CAAR;IACAC,cAAc,CAAC,CAAD,CAAd;IACAS,YAAY,CAACc,QAAQ,IAAKA,QAAQ,KAAK9B,IAAI,CAACkB,GAAlB,GAAwBlB,IAAI,CAAC+B,IAA7B,GAAoC/B,IAAI,CAACkB,GAAvD,CAAZ;EACF,CALyB,EAKvB,EALuB,CAA1B;EAOA,MAAMc,gBAAgB,GAAGrC,WAAW,CAAEsC,IAAD,IAAkB;IACpD3B,QAAQ,CAAC,EAAD,CAAR;IACAC,cAAc,CAAC,CAAD,CAAd;IACAK,YAAY,CAACqB,IAAD,CAAZ;EACF,CAJmC,EAIjC,EAJiC,CAApC;EAMA,MAAMC,iBAAiB,GAAGvC,WAAW,CAAC,CAACsC,IAAD,EAAeE,IAAf,EAA2CC,IAA3C,KACnChB,iBAAiB,CAACiB,UAAU,IAAIlC,kBAAkB,CAAC;IAAEkC,UAAF;IAAcJ,IAAd;IAAoBE,IAApB;IAA0BC;EAA1B,CAAD,CAAjC,CADiB,EAEnC,EAFmC,CAArC;EAIA,MAAME,QAAQ,GAAG3C,WAAW,CAAC,MAAM;IAChC,IAAIwB,cAAc,KAAKE,WAAvB,EAAoC;MACjCf,QAAQ,CAAC,EAAD,CAAR;MACAC,cAAc,CAAC,CAAD,CAAd;MACAe,cAAc,CAACH,cAAD,CAAd;IACF;EACH,CAN2B,EAMzB,CAACA,cAAD,EAAiBE,WAAjB,CANyB,CAA5B;EAQA,MAAMkB,QAAQ,GAAG5C,WAAW,CAAE6C,IAAD,IAAkB;IAC5ClC,QAAQ,CAAC,EAAD,CAAR;IACAC,cAAc,CAAC,CAAD,CAAd;IACAkB,aAAa,CAACe,IAAD,CAAb;EACF,CAJ2B,EAIzB,EAJyB,CAA5B;EAMA5C,SAAS,CAAC,MAAM;IACb,IAAI6C,MAA8B,GAAG,EAArC;IACA,IAAI9B,SAAS,CAAC+B,MAAd,EAAsBD,MAAM,CAACrC,YAAY,CAACU,UAAd,CAAN,GAAkCH,SAAlC;IACtB,IAAIA,SAAS,CAAC+B,MAAd,EAAsBD,MAAM,CAACrC,YAAY,CAACa,UAAd,CAAN,GAAkCF,SAAlC;IACtB,IAAIS,UAAU,CAACkB,MAAf,EAAuBD,MAAM,CAACrC,YAAY,CAACsB,MAAd,CAAN,GAA8BF,UAA9B;IACvB,IAAImB,MAAM,CAACC,IAAP,CAAYvB,WAAZ,EAAyBqB,MAAzB,IAAmC,CAAvC,EAA0CD,MAAM,CAACrC,YAAY,CAACmB,MAAd,CAAN,GAA8BtB,uBAAuB,CAACoB,WAAD,CAArD;IAC1CX,eAAe,CAAC+B,MAAD,CAAf;EACF,CAPQ,EAON,CAACjB,UAAD,EAAaH,WAAb,EAA0BV,SAA1B,EAAqCI,SAArC,CAPM,CAAT;EASA,MAAM8B,YAAY,GAAGlD,WAAW,CAAC,MAC9ByB,iBAAiB,CAACC,WAAD,CADY,EAE9B,CAACA,WAAD,CAF8B,CAAhC;EAIA,MAAMyB,eAAe,GAAGnD,WAAW,CAAC,MAAM;IACvCW,QAAQ,CAAC,EAAD,CAAR;IACAC,cAAc,CAAC,CAAD,CAAd;IACAK,YAAY,CAAC,EAAD,CAAZ;IACAI,YAAY,CAAChB,IAAI,CAACkB,GAAN,CAAZ;IACAI,cAAc,CAAC,EAAD,CAAd;IACAF,iBAAiB,CAAC,EAAD,CAAjB;IACAK,aAAa,CAAC,EAAD,CAAb;EACF,CARkC,EAQhC,EARgC,CAAnC;EAUA,MAAMsB,KAAK,GAAG;IACXpB,MADW;IAEXK,gBAFW;IAGXM,QAHW;IAIXQ,eAJW;IAKXD,YALW;IAMXlC,SANW;IAOXI,SAPW;IAQXI,cARW;IASXE,WATW;IAUXa,iBAVW;IAWXV,UAXW;IAYXe;EAZW,CAAd;EAeA,oBACG,QAAC,iBAAD,CAAmB,QAAnB;IAA4B,KAAK,EAAEQ,KAAnC;IAAA,UACIvC;EADJ;IAAA;IAAA;IAAA;EAAA,QADH;AAKF,CAnFM;;GAAMH,kB;UAC8BP,e;;;KAD9BO,kB"},"metadata":{},"sourceType":"module"}