{"ast":null,"code":"import { parceStringToNumberAndPoint } from \"./parceStringToNumberAndPoint\";\nexport const addFieldToBook = (prevForm, _ref) => {\n  let {\n    target\n  } = _ref;\n  let newValue = target === null || target === void 0 ? void 0 : target.value;\n\n  if (target.name === 'price') {\n    newValue = parceStringToNumberAndPoint(newValue);\n  } else if (target.type === 'file') {\n    var _target$files;\n\n    newValue = target === null || target === void 0 ? void 0 : (_target$files = target.files) === null || _target$files === void 0 ? void 0 : _target$files[0];\n  }\n\n  return { ...prevForm,\n    [target.name]: newValue\n  };\n};","map":{"version":3,"names":["parceStringToNumberAndPoint","addFieldToBook","prevForm","target","newValue","value","name","type","files"],"sources":["/Users/ksena/Программирование/React/lessons/Shop_1001/client/src/utils/addFieldToBook.ts"],"sourcesContent":["import { ChangeEvent } from \"react\"\n\nimport { IBook } from \"../interface/IBook\"\nimport { parceStringToNumberAndPoint } from \"./parceStringToNumberAndPoint\"\n\nexport const addFieldToBook = (\n    prevForm: Record<string, keyof Omit<IBook, 'idBook'>>, \n    { target }: ChangeEvent<HTMLInputElement>\n) => {\n    let newValue: File | string = target?.value\n\n    if (target.name === 'price') {\n        newValue = parceStringToNumberAndPoint(newValue)\n    } else if (target.type === 'file') {\n        newValue = target?.files?.[0] as File\n    }\n\n    return ({ ...prevForm, [target.name]: newValue } as Record<string, keyof Omit<IBook, 'idBook'>>)\n} \n"],"mappings":"AAGA,SAASA,2BAAT,QAA4C,+BAA5C;AAEA,OAAO,MAAMC,cAAc,GAAG,CAC1BC,QAD0B,WAGzB;EAAA,IADD;IAAEC;EAAF,CACC;EACD,IAAIC,QAAuB,GAAGD,MAAH,aAAGA,MAAH,uBAAGA,MAAM,CAAEE,KAAtC;;EAEA,IAAIF,MAAM,CAACG,IAAP,KAAgB,OAApB,EAA6B;IACzBF,QAAQ,GAAGJ,2BAA2B,CAACI,QAAD,CAAtC;EACH,CAFD,MAEO,IAAID,MAAM,CAACI,IAAP,KAAgB,MAApB,EAA4B;IAAA;;IAC/BH,QAAQ,GAAGD,MAAH,aAAGA,MAAH,wCAAGA,MAAM,CAAEK,KAAX,kDAAG,cAAgB,CAAhB,CAAX;EACH;;EAED,OAAQ,EAAE,GAAGN,QAAL;IAAe,CAACC,MAAM,CAACG,IAAR,GAAeF;EAA9B,CAAR;AACH,CAbM"},"metadata":{},"sourceType":"module"}